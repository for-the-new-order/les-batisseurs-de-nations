@using System.Timers

@page "/"
@inject IEpisodesService EpisodesService

@if (!_isLive)
{
    <PageHeader Title="Accueil" Description="Bienvenue sur le site des bâtisseurs de nations!" Items="_items" />
}

@if (_noNextEpisode)
{
    <MudContainer Style="height: calc(100vh - 246px);">
        <div style="background-image: url(https://cdn.rpg.solutions/les-batisseurs-de-nations/images/DwarvesGuide.jpg); background-repeat: no-repeat; background-size: contain; background-position: center; height:100%;"></div>
    </MudContainer>
}
else if (_isLive)
{
    <TwitchEmbedFull Channel="_nextEpisode.Streamer" />
}
else
{
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="pt-7">
        <MudGrid Justify="Justify.Center">
            <MudItem lg="@NextEpisodeCols" xs="12">
                <NextStreamCard Episode="_nextEpisode" />
            </MudItem>
            @if (!_noNextClanEpisode)
            {
                <MudItem lg="@NextEpisodeCols" xs="12">
                    <NextStreamCard Episode="_nextClanEpisode" />
                </MudItem>
            }
        </MudGrid>
    </MudContainer>
}

<RefreshLiveStream NextEpisode="_nextEpisode" StateHasChangedDelegate="() => StateHasChanged()" />

@code{
    //private Timer redrawTimer = new Timer();

    private EpisodeInfo _nextEpisode;
    private bool _noNextEpisode => _nextEpisode == null;

    private EpisodeInfo _nextClanEpisode;
    private bool _noNextClanEpisode => _nextClanEpisode == null;

    private int NextEpisodeCols => _noNextClanEpisode ? 12 : 6;

    //private StreamState[] _liveState = new[] { StreamState.StartingSoon, StreamState.Playing, StreamState.MightStillBeOn };
    //private bool _isLive => _nextEpisode != null && _liveState.Contains(_nextEpisode.State);

    private bool _isLive => _nextEpisode != null && _nextEpisode.IsLive;

    const double OneHour = 3600000;

    protected override async Task OnInitializedAsync()
    {
        _nextEpisode = await EpisodesService.FindNextAsync(DateTime.UtcNow.Date.ConvertUtcToEasternTime());
        if (!_nextEpisode.HasTeamMembers)
        {
            _nextClanEpisode = await EpisodesService.FindNextClanEpisodeAsync(DateTime.UtcNow.Date);
        }

        //redrawTimer.Interval = GetRefreshInterval();
        //redrawTimer.Elapsed += (_, _) =>
        //{
        //    Console.WriteLine($"redrawTimer.Elapsed; _isLive: {_isLive}");
        //    if (_isLive)
        //    {
        //        Console.WriteLine("Redrawing");
        //        StateHasChanged();
        //        redrawTimer.Stop();
        //    }
        //    else
        //    {
        //        var newInterval = GetRefreshInterval();
        //        if (newInterval != redrawTimer.Interval)
        //        {
        //            redrawTimer.Interval = newInterval;
        //        }
        //    }
        //};
        //redrawTimer.Start();
    }

    //private double GetRefreshInterval()
    //{
    //    var now = DateTime.UtcNow.ConvertUtcToEasternTime();
    //    var nextEpisodeIsIn = _nextEpisode.SoonBeforeStart - now;
    //    var interval = nextEpisodeIsIn.TotalMilliseconds < OneHour
    //        ? nextEpisodeIsIn.TotalMilliseconds
    //        : OneHour;
    //    Console.WriteLine($"Next refresh interval in {interval} ms.");
    //    return interval;
    //}


    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>
    {
        new BreadcrumbItem("Accueil", href: null, disabled: true, icon: MudBlazor.Icons.Outlined.Home),
    };
}