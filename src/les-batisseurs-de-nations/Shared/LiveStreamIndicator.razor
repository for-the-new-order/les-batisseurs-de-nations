@inject IEpisodesService EpisodesService
@inject NavigationManager NavigationManager

@if (_isLive)
{
    var text = "LIVE STREAM";
    if (_nextEpisode.State == StreamState.StartingSoon)
    {
        text = "STARTING SOON";
    }
    if (_isHomePage)
    {
        <div class="live-stream">&#x29BF;&nbsp;@text</div>
    }
    else
    {
        <a href="/"><div class="live-stream">&#x29BF;&nbsp;@text</div></a>
    }
    if (_nextEpisode.State == StreamState.StartingSoon)
    {
        <text>&nbsp;</text>
        <CountdownClock Target="_nextEpisode.StartDate" />
    }
}
else if (_nextEpisode != null)
{
    <text>Prochain épisode:</text>
    <CountdownClock Target="_nextEpisode.SoonBeforeStart" />
}

<RefreshLiveStream NextEpisode="_nextEpisode" StateHasChangedDelegate="() => StateHasChanged()" />

@code{
    private EpisodeInfo _nextEpisode;
    private bool _isLive => _nextEpisode != null && _nextEpisode.IsLive;
    private bool _isHomePage = false;

    protected override async Task OnInitializedAsync()
    {
        _nextEpisode = await EpisodesService.FindNextAsync(DateTime.UtcNow.Date.ConvertUtcToEasternTime());
        _isHomePage = new Uri(NavigationManager.Uri).AbsolutePath == "/";
    }
}